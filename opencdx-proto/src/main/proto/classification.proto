/*
 * Categorization outcome of a test analysis from a specific test-kit.
 */
syntax = "proto3";
option java_multiple_files = true;
package cdx.opencdx.grpc.neural.classification;
import "common.proto";
import "google/protobuf/timestamp.proto";

/*
 * Enum to categorize different types of specimens.
 */
enum SpecimenType {
  /**
   * Unspecified specimen type.
   */
  UNSPECIFIED_SPECIMEN_TYPE = 0;
  /*
   * Blood specimen.
   */
  BLOOD = 1;
  /*
   * Swab specimen.
   */
  SWAB = 2;
  /*
   * Urine specimen.
   */
  URINE = 3;
}

/*
 * Enum to denote the severity level.
 */
enum SeverityLevel {
  /**
   * Unspecified severity.
   */
  UNSPECIFIED_SEVERITY_LEVEL = 0;
  /*
   * Low severity.
   */
  LOW = 1;
  /*
   * Moderate severity.
   */
  MEDIUM = 2;
  /*
   * High severity.
   */
  HIGH = 3;
}

/*
 * Enum for classification type
 */
enum ClassificationType {
  /**
   * Unspecified classification
   */
  UNSPECIFIED_CLASSIFICATION_TYPE = 0;
  /*
   * Bacterial classification
   */
  BACTERIAL = 1;
  /*
   * Viral classification
   */
  VIRAL = 2;
  /*
   * Injury classification
   */
  INJURY = 3;
}

/*
 * Message denoting a geographical location via coordinates.
 */
message Location {
  /*
   * The latitude of the location.
   */
  double latitude = 1;
  /*
   * The longitude of the location.
   */
  double longitude = 2;
}

/*
 * Message providing guidelines for positive and negative interpretations.
 */
message Interpretation {
  /*
   * Guide for interpreting positive results.
   */
  map<string, string> positive = 1;
  /*
   * Guide for interpreting negative results.
   */
  map<string, string> negative = 2;
}

/*
 * Message outlining the details of a test kit.
 */
message TestKit {
  /*
   * Name of the test kit.
   */
  string name = 1;
  /*
   * The disease that the test kit targets.
   */
  string target_disease = 2;
  /*
   * Required type of specimen for the test.
   */
  SpecimenType specimen_type = 3;
  /*
   * Procedure for conducting the test.
   */
  string procedure = 4;
  /*
   * Guide for test results interpretation.
   */
  Interpretation interpretation_guide = 5;
  /*
   * The brand that manufactured the test kit.
   */
  string brand = 6;
  /*
   * The approval status of the test kit.
   */
  string approval_status = 7;
  /*
   * The accuracy percentage of the test kit.
   */
  float accuracy = 8;
  /*
   * The duration of the test in minutes.
   */
  int32 test_duration = 9;

  /**
   * The cost of the test kit.
   */
  string test_case_id = 10;
}

/*
 * Message to store symptom information.
 */
message Symptom {
  /*
   * Name of the symptom.
   */
  string name = 1;
  /*
   * Severity level of the symptom.
   */
  SeverityLevel severity = 2;
  /*
   * Date when the symptom first appeared.
   */
  google.protobuf.Timestamp onset_date = 3;
  /*
   * Duration of the symptom.
   */
  cdx.opencdx.grpc.common.Duration duration = 4;
  /*
   * Additional details about the symptom.
   */
  string additional_details = 5;
}

/*
 * Message to record user-provided test kit classification information.
 */
message UserAnswer {
  /*
   * ID of the user.
   */
  string patient_id = 1;

  /*
   * Id of the connected test..
   */
  optional string connected_test_id = 2;

  /*
   * Id of the user questionnaire.
   */
  optional string user_questionnaire_id = 3;
  /*
   * Symptoms reported by the user.
   */
  repeated Symptom symptoms = 4;
  oneof result {
    /*
     * ID to a media image for the test result.
     */
    string media_id = 5;
    /*
     * Text description of the test result.
     */
    string text_result = 6;
  }
  /*
   * Age of the user.
   */
  int32 age = 7;
  /*
   * Gender of the user.
   */
  cdx.opencdx.grpc.common.Gender gender = 8;
  /*
   * Medical conditions of the user.
   */
  string medical_conditions = 9;
  /*
   * Pregnancy status of the user.
   */
  bool pregnancy_status = 10;
  /*
   * Language preference of the user.
   */
  string language_preference = 11;
  /*
   * Location of the user.
   */
  Location user_location = 12;

  /*
 * ID of the submitting user.
 */
  string submitting_user_id = 13;
}

/*
 * The response message to user classification request.
 */
message ClassificationResponse {
  /*
   * Name of the recommended test kit.
   */
  TestKit test_kit = 1;
  /*
   * Confidence score of the classification.
   */
  float confidence = 2;
  /*
   * Probability of a positive result.
   */
  float positive_probability = 3;
  /*
   * Classification related message.
   */
  string message = 4;
  /*
   * Availability of the recommended test kit.
   */
  string availability = 5;
  /*
   * Cost of the recommended test kit.
   */
  float cost = 6;
  /*
   * Additional recommendations based on classification.
   */
  string further_actions = 7;
  /*
   * Alternative test kits.
   */
  repeated TestKit alternative_options = 8;
  /*
   * Feedback URL for user classification result.
   */
  string feedback_url = 9;
  /*
   * Timestamp of the classification result.
   */
  google.protobuf.Timestamp timestamp = 10;
  /*
   * Identifier for the patient.
   */
  string patient_id = 11;

  /*
   * Whether to notify the CDC.
   */
  bool notify_cdc = 12;

  /*
   * Classification type
   */
   ClassificationType type = 13;
}

/*
 * The request message detailing user-provided information for classification.
 */
message ClassificationRequest {
  /*
   * Information provided by user for classification.
   */
  UserAnswer user_answer = 1;
}

/*
 * Service providing the Classify RPC for test kit classification.
 */
service ClassificationService {
  rpc Classify(ClassificationRequest) returns (ClassificationResponse);
  /*
   * Classify RPC returns a classification result based on UserAnswer input.
   */
}

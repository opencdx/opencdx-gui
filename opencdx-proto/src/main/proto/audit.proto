/*
 * The Audit protobuf encapsulates the process of recording and monitoring events that are necessitated for audit purposes.
 */
syntax = "proto3";
option java_multiple_files = true;
package cdx.opencdx.grpc.audit;
import "google/protobuf/timestamp.proto";
/*
 * Describes the specific type of Audit event being recorded.
 */
enum AuditEventType {
  /*
   * Represents an unspecified audit event type.
   */
  AUDIT_EVENT_TYPE_UNSPECIFIED = 0;
  /*
   * Represents a successful user login event.
   */
  AUDIT_EVENT_TYPE_USER_LOGIN_SUCCEEDED = 1;
  /*
   * Designates an event where a user logged out from the system.
   */
  AUDIT_EVENT_TYPE_USER_LOG_OUT = 2;
  /*
   * Depicts a failed user login attempt.
   */
  AUDIT_EVENT_TYPE_USER_LOGIN_FAIL = 3;
  /*
   * Signifies that there was a change in user access.
   */
  AUDIT_EVENT_TYPE_USER_ACCESS_CHANGE = 4;
  /*
   * Reflects an event where a user password was changed.
   */
  AUDIT_EVENT_TYPE_USER_PASSWORD_CHANGE = 5;
  /*
   * Corresponds to a successful system login event.
   */
  AUDIT_EVENT_TYPE_SYSTEM_LOGIN_SUCCEEDED = 6;
  /*
   * Symbolizes a system logout event.
   */
  AUDIT_EVENT_TYPE_SYSTEM_LOG_OUT = 7;
  /*
   * Indicates a failed system login attempt.
   */
  AUDIT_EVENT_TYPE_SYSTEM_LOGIN_FAIL = 8;
  /*
   * Stands for an event where Personal Identifiable Information was accessed.
   */
  AUDIT_EVENT_TYPE_USER_PII_ACCESSED = 9;
  /*
   * Immplies an event where Personal Identifiable Information was updated.
   */
  AUDIT_EVENT_TYPE_USER_PII_UPDATED = 10;
  /*
   * Entails an event where Personal Identifiable Information was created.
   */
  AUDIT_EVENT_TYPE_USER_PII_CREATED = 11;
  /*
   * Notes an event where Personal Identifiable Information was deleted.
   */
  AUDIT_EVENT_TYPE_USER_PII_DELETED = 12;
  /*
   * Represents an event where Personal Health Information was accessed.
   */
  AUDIT_EVENT_TYPE_USER_PHI_ACCESSED = 13;
  /*
   * Exemplifies an event where Personal Health Information was updated.
   */
  AUDIT_EVENT_TYPE_USER_PHI_UPDATED = 14;
  /*
   * Constitutes an event where Personal Health Information was created.
   */
  AUDIT_EVENT_TYPE_USER_PHI_CREATED = 15;
  /*
   * Portrays an event where Personal Health Information was deleted.
   */
  AUDIT_EVENT_TYPE_USER_PHI_DELETED = 16;
  /*
   * Shows a user communication event.
   */
  AUDIT_EVENT_TYPE_USER_COMMUNICATION = 17;
  /*
   * Denotes a configuration change event.
   */
  AUDIT_EVENT_TYPE_CONFIG_CHANGE = 18;
}
/*
 * Describes the level of sensitivity of the data contained within this audit message.
 */
enum SensitivityLevel {
  /*
   * Represents an unspecified sensitivity level.
   */
  SENSITIVITY_LEVEL_UNSPECIFIED = 0;
  /*
   * Implies that the information contained is not sensitive.
   */
  SENSITIVITY_LEVEL_LOW = 1;
  /*
   * Stipulates that the info could be used to identify an individual.
   */
  SENSITIVITY_LEVEL_MEDIUM = 2;
  /*
   * Indicates that the message contains Personal information.
   */
  SENSITIVITY_LEVEL_HIGH = 3;
}
/*
 * Defines the category of an actor: Human, System, or another entity.
 */
enum AgentType {
  /*
   * Symbolizes an unspecified agent type.
   */
  AGENT_TYPE_UNSPECIFIED = 0;
  /*
   * Demonstrates that the actor is a human.
   */
  AGENT_TYPE_HUMAN_USER = 1;
  /*
   * The actor is a system.
   */
  AGENT_TYPE_SYSTEM = 2;
  /*
   * The actor is a separate entity.
   */
  AGENT_TYPE_OTHER_ENTITY = 3;
}
/*
 * Identifies the identity that initiated this audit.
 */
message Actor {
  /*
   * UUID identifying the identity.
   */
  string identity = 1;
  /*
   * The role the actor had when initiated.
   */
  string role = 2;
  /*
   * Network address from actor when initiated.
   */
  string network_address = 3;
  /*
   * Indicates if the actor is a Human, System or another entity.
   */
  AgentType agent_type = 4;
}
/*
 * Contains the relevant data for this audit.
 */
message DataObject {
  string resource = 1;
  /*
   * Data block recorded for Audit System
   */
  string data = 2;
  /*
   * Indicates the sensitivity level of this data.
   */
  SensitivityLevel sensitivity = 3;
}
/*
 * Source of the Audit event.
 */
message AuditSource {
  /*
   * System Name
   */
  string system_info = 1;
  /*
   * Relevant configuration information.
   */
  string configuration = 2;
}
/*
 * Identifies whose information is being acted on.
 */
message AuditEntity {
  /*
   * Patient ID
   */
  string patient_id = 1;
  /*
   * National Health Identifier
   */
  string nationalHealthId = 2;
}
/*
 * Audit Event information to record.
 */
message AuditEvent {
  /*
   * Timestamp when this event occurred.
   */
  optional google.protobuf.Timestamp created = 1;
  /*
   * Identifies the type of event.
   */
  AuditEventType event_type = 2;
  /*
   * Identifies who is causing the action
   */
  Actor actor = 3;
  /*
   * Data that is being acted on.
   */
  DataObject data_object = 4;
  /*
   * Description of use of this data.
   */
  string purpose_of_use = 5;
  /*
   * Where did the event originate
   */
  AuditSource audit_source = 6;
  /*
   * Identifies whose data is being acted on.
   */
  AuditEntity audit_entity = 7;
  /*
   * Timestamp when this event was modified.
   */
  optional google.protobuf.Timestamp modified = 8;
  /*
   * ID of the creator of this event.
   */
  optional string creator = 9;
  /*
   * ID of the modifier of this event.
   */
  optional string modifier = 10;
}
/*
 * Indicates the status of an operation
 */
message AuditStatus {
  /*
   * Indicates whether the operation was successful or not.
   */
  bool success = 1;
}
/*
 * This service engages in communication with the Audit Service
 * to record AuditEvent entities that are essential for retaining certain information.
 */
service AuditService {
  /*
   * This operation enables the registration of an AuditEvent.
   */
  rpc Event(AuditEvent) returns (AuditStatus);
}


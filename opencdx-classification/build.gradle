/*
 * This file was generated by the Gradle "init" task.
 */
plugins {
    id("application")
}

dependencies {

    // Spring
    implementation "org.springframework.boot:spring-boot-starter-actuator:${springBootVersion}"
    implementation "org.springframework.boot:spring-boot-starter-web:${springBootVersion}"
    implementation "org.springframework.boot:spring-boot-starter-validation:${springBootVersion}"
    implementation "org.springframework.boot:spring-boot-starter-test:${springBootVersion}"
    implementation "org.springframework.boot:spring-boot-starter-data-mongodb:${springBootVersion}"
    implementation "org.springframework.boot:spring-boot-starter-aop:${springBootVersion}"
    implementation "io.github.lognet:grpc-spring-boot-starter:${grpcSpringBootStarterVersion}"
    implementation "org.springframework.boot:spring-boot-starter-security:${springBootVersion}"
    implementation "org.springframework.boot:spring-boot-starter-cache:${springBootVersion}"
    

    implementation "org.springframework.cloud:spring-cloud-starter-config"
    implementation "org.springframework.cloud:spring-cloud-starter-netflix-eureka-client"

    // Apache
    implementation "org.apache.tika:tika-core:${apacheTikaVersion}"


    // https://mvnrepository.com/artifact/io.github.openfeign/feign-httpclient
    implementation group: 'io.github.openfeign', name: 'feign-httpclient', version: '13.1'
    // https://mvnrepository.com/artifact/io.github.openfeign/feign-hc5
    implementation group: 'io.github.openfeign', name: 'feign-hc5', version: '13.1'

    //Database
    implementation "com.github.cloudyrock.mongock:mongock-spring-v5:${mongoData}"
    implementation "com.github.cloudyrock.mongock:mongodb-springdata-v3-driver:${mongoData}"
    implementation "com.github.cloudyrock.mongock:mongock-bom:${mongoData}"

    // Swagger
    implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:${springDocVersion}"

    // Evrete
    implementation "org.evrete:evrete-core:${evreteVersion}"
    implementation "org.evrete:evrete-dsl-java:${evreteVersion}"

    // HAPI FHIR
    implementation "ca.uhn.hapi.fhir:hapi-fhir-structures-r4:6.8.5"

    //GRPC - To enable the GRPC uncomment the following two lines
    implementation "com.google.protobuf:protobuf-java:${protobufVersion}"
    implementation project(":opencdx-proto")
    implementation project(":opencdx-commons")
    implementation project(":opencdx-client")
    implementation 'io.micrometer:micrometer-observation'
    implementation 'io.micrometer:micrometer-tracing'
    implementation 'io.micrometer:micrometer-tracing-bridge-brave'
    runtimeOnly 'io.micrometer:micrometer-registry-prometheus'
    implementation 'io.zipkin.reporter2:zipkin-reporter-brave'
    testImplementation "io.nats:nats-spring:${natsSpringVersion}"
    runtimeOnly "com.github.loki4j:loki-logback-appender:${lokiLogBackAppenderVersion}"
}

sourceSets {
    main {
        java {
            srcDirs = ["src/main/java", "build/generated/sources/annotationProcessor/java/main"]
        }
        resources {
            srcDirs = ["src/main/resources"]
        }

    }
    test {
        java {
            srcDirs = ["src/test/java", "build/generated/sources/annotationProcessor/java/test"]
        }
        resources {
            srcDirs = ["src/test/resources"]
        }
    }
}

bootJar {
    enabled = true
}

application {
    // Define the main class for the application.
    mainClass = "cdx.opencdx.classification.Application"
}
